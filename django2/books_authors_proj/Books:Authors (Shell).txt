
(djangoPy3Env) ilegend@Is-MacBook-Pro books_authors_proj % python manage.py makemigrations
Migrations for 'books_authors_app':
  books_authors_app/migrations/0001_initial.py
    - Create model Book
    - Create model Author
(djangoPy3Env) ilegend@Is-MacBook-Pro books_authors_proj % python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying books_authors_app.0001_initial... OK
  Applying sessions.0001_initial... OK
(djangoPy3Env) ilegend@Is-MacBook-Pro books_authors_proj % python manage.py shell
Python 3.9.13 (main, May 24 2022, 21:13:51) 
[Clang 13.1.6 (clang-1316.0.21.2)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from books_authors_app.models import *
>>> Book.objects.create(title='C Sharp')
<Book: Book object (1)>
>>> Book.objects.create(title='Java')
<Book: Book object (2)>
>>> Book.objects.create(title='Python')
<Book: Book object (3)>
>>> Book.objects.create(title='PHP')
<Book: Book object (4)>
>>> Book.objects.create(title='Ruby')
<Book: Book object (5)>
>>> 
>>> Author.objects.create(first_name='Jane',last_name='Austen')
<Author: Author object (1)>
>>> Author.objects.create(first_name='Emily',last_name='Dickinson')
<Author: Author object (2)>
>>> Author.objects.create(first_name='Fyodor',last_name='Dostoevsky')
<Author: Author object (3)>
>>> Author.objects.create(first_name='William',last_name='Shakespeare')
<Author: Author object (4)>
>>> Author.objects.create(first_name='Lau',last_name='Tzu')
<Author: Author object (5)>
>>> 
>>> exit()
(djangoPy3Env) ilegend@Is-MacBook-Pro books_authors_proj % python manage.py makemigrations
No changes detected
(djangoPy3Env) ilegend@Is-MacBook-Pro books_authors_proj % python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  No migrations to apply.
(djangoPy3Env) ilegend@Is-MacBook-Pro books_authors_proj % python manage.py shell
Python 3.9.13 (main, May 24 2022, 21:13:51) 
[Clang 13.1.6 (clang-1316.0.21.2)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from books_authors_app.models import *
>>> 
>>> C=Book.objects.get(id=1)
>>> C.title='C#'
>>> C.save()
>>> 
>>> Name=Author.objects.get(id=4)
>>> Name.fname='Bill'
>>> Name.save()
>>> 
>>> Author1=Author.objects.get(id=1)
>>> Book1=Book.objects.get(id=1)
>>> Book2=Book.objects.get(id=2)
>>> Author1.books.add(Book1)
>>> Author1.books.add(Book2)
>>> 
>>> Author2=Author.objects.get(id=2)
>>> Book3=Book.objects.get(id=3)
>>> Author2.books.add(Book1)
>>> Author2.books.add(Book2)
>>> Author2.books.add(Book3)
>>> 
>>> Author3=Author.objects.get(id=3)
>>> Book4=Book.objects.get(id=4)
>>> Author3.books.add(Book1)
>>> Author3.books.add(Book2)
>>> Author3.books.add(Book3)
>>> Author3.books.add(Book4)
>>> 
>>> Author4=Author.objects.get(id=4)
>>> Book5=Book.objects.get(id=5)
>>> Author4.books.add(Book1)
>>> Author4.books.add(Book2)
>>> Author4.books.add(Book3)
>>> Author4.books.add(Book4)
>>> Author4.books.add(Book5)
>>> 
>>> Book3.authors.all()
<QuerySet [<Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>]>
>>> Book3.authors.remove(Author.objects.get(id=1))
>>> Author5=Author.objects.get(id=5)
>>> Author5.books.add(Book2)
>>> 
>>> Author3.books.all()
<QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>]>
>>> Book5.authors.all()
<QuerySet [<Author: Author object (4)>]>
>>> 
